"""
정수 X가 주어졌을 때, 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지입니다.
X가 5로 나누어 떨어지면 5로나눈다.
X가 3으로 나누어 떨어지면 3으로 나눈다.
X가 2로 나누어 떨어지면 2로 나눈다.
X에서 1을 뺀다.

정수 X가 주어졌을 때, 연산 4개를 적절히 사용해서 값을 1로 만들고자 한다.
연산을 사용하는 횟수의 최솟값을 출력하라. 예를 들어 정수가 26이면 다음과 같이
곗나해서 3번의 연산이 최솟값이다.

26 -> 25 -> 5 -> 1
"""

"""
첫째 줄에 정수 X가 주어집니다, (1 <= X <= 30,000)

a(i) = i를 1로 만들기 위한 최소 연산 횟수
점화식은 다음과 같다
a(i) == min(a(i-1), a(i/2), a(i/3), a(i/5) + 1

단, 1을 빼는 연산을 제외하고는 해당 수로 나누어떨어질 때에 한해 점화식을 적용할 수 있다.
"""

d = [0] * 30001
# 1일경우 자기 자신이 1 연산을 할 필요가 없음

# 다이나믹 프로그래밍 진행 (보텀업)
def sol(x):
    for i in range(2, x + 1):
        d[i] = d[i - 1] + 1
        if i % 2 == 0:
            d[i] = min(d[i], d[i // 2] + 1)
        if i % 3 == 0:
            d[i] = min(d[i], d[i // 3] + 1)
        if i % 5 == 0:
            d[i] = min(d[i], d[i // 5] + 1)
    print(d[x])

if __name__ == '__main__':
    sol(26)
