"""
N가지 종류의 화폐가 있다
이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M원이 되도록 하려고한다.
이때 각 종류의 화폐는 몇개라도 사용할 수 있다.

예를 들어 2원, 3원 단위의 화폐가 있을 때는 15원을 만들기 위해 3원을 5개 사용하는 것이
최소한의 화폐 개수입니다.

M원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램을 작성하세요
"""

"""
입력 조건 : N, M이 주어진다 (1 <= N <= 100, 1 <= M <= 10,000)
        - 이후의 N개의 줄에는 각 화폐의 가치가 주어진다 화폐의 가치는 10,000보다 작거나 같은 수 자연수이다.

출력 조건 : 첫째 줄에는 최소 화폐 개수를 출력한다 불가능할 때는 -1을 출력한다
"""

"""
a(i) = 금액 i를 만들 수 잇는 최소한의 화폐 개수
k = 각 화폐의 단위
점화식 : 각 화폐 단위인 k를 하나씩 확인하며
 - a(i-k)를 만드는 방법이 존재하는 경우, a(i) = min(a(i), a(i-k) + 1)
 - a(i-k)를 만드는 방법이 존재하지 않는 경우, ai = INF
"""

d = [0] * 10001


def sol(n, m, li):
    c = None
    for i in range(1, m + 1):
        c= False
        d[i] = d[i - 1] + 1
        for l in li:
            if i % l == 0:
                c =True
                d[i] = min(d[i], d[i // l] + 1)

    if c:
        print(d[m])
    else:
        print(-1)


def sol2(n, m, li):
    d = [10001] * (m + 1)

    d[0] = 0
    for i in range(n):
        for j in range(li[i], m + 1):
            if d[j - li[i]] != 10001:
                d[j] = min(d[j], d[j - li[i]] + 1)
    if d[m] == 10001:
        print(-1)
    else:
        print(d[m])
if __name__ == '__main__':
    sol2(2, 11, [2, 3])
